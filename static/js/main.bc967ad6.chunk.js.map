{"version":3,"sources":["auth.js","Header.js","Banner/Banner.js","DisciplinaCard/DisciplinaCard.js","DisciplinasList/DisciplinasList.js","Main.js","Login.js","PerguntaCard/PerguntaCard.js","PerguntaForm/PerguntaForm.js","Perguntas.js","RespostaCard/RespostaCard.js","RespostaForm/RespostaForm.js","PerguntaPage.js","Signup.js","Test.js","App.js","reportWebVitals.js","index.js"],"names":["callback","a","Parse","require","serverURL","initialize","User","become","localStorage","getItem","logOut","setItem","console","log","username","senha","logIn","then","user","get","JSON","stringify","catch","error","useStyles","makeStyles","loginbutton","backgroundColor","useStyleSearchBar","root","color","borderColor","border","Header","classes","searchbar","React","useState","anchorEl","setAnchorEl","handleClose","logado","setLogado","useEffect","verifyLogin","AppBar","position","Grid","container","direction","justify","alignItems","item","xs","IconButton","edge","aria-label","Link","href","variant","TextField","id","label","className","InputProps","startAdornment","InputAdornment","Avatar","aria-controls","aria-haspopup","onClick","event","currentTarget","keepMounted","open","Boolean","onClose","MenuItem","ButtonGroup","Button","Banner","Paper","Typography","minWidth","title","fontSize","pos","marginBottom","DisciplinaCard","props","Card","CardContent","component","disciplina","CardActions","coddisciplina","size","DisciplinasList","disciplinas","setDisciplinas","Disciplinas","Object","extend","query","Query","limit","find","results","fetchData","disciplinasDisplay","length","map","sm","md","attributes","Nome","URLid","Main","theme","margin","spacing","width","Login","history","useHistory","userTextField","useRef","senhaTextField","afterLogin","success","replace","attemptLogin","current","value","onSubmit","e","preventDefault","inputRef","required","type","autoComplete","maxWidth","textAlign","marginTop","marginLeft","marginRight","media","height","paddingTop","expand","transform","transition","transitions","create","duration","shortest","expandOpen","avatar","red","PerguntaCard","expanded","setExpanded","CardHeader","cabecalho","subheader","createdAt","descricao","substring","Collapse","in","timeout","unmountOnExit","disableSpacing","clsx","aria-expanded","defaultProps","getModalStyle","top","left","paper","palette","background","boxShadow","shadows","padding","fab","bottom","right","PerguntaForm","headerTextField","descricaoTextField","Perguntas","perguntas","set","usuario","disciplinasquery","equalTo","first","save","result","alert","refresh","modalStyle","setOpen","body","style","sendPergunta","disabled","autoFocus","multiline","Fab","Modal","aria-labelledby","aria-describedby","useParams","setPerguntas","innerquery","matchesQuery","listaPerguntas","pergunta","HeaderText","Description","Math","floor","Date","now","getTime","RespostaCard","email","charAt","comentario","RespostaForm","respostaTextField","Respostas","respostas","perguntasquery","sendResposta","PerguntaPage","setPergunta","setRespostas","fetchRespostas","matches","listaRespostas","resposta","align","cardpergunta","Signup","emailTextField","confirmasenhaTextField","usernameTextField","signUp","Test","displayperguntas","App","basename","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bc967ad6.chunk.js","sourcesContent":["export function verifyLogin(callback){\r\n    const Parse = require('parse/node');\r\n\r\n    Parse.serverURL = 'https://parseapi.back4app.com'; // This is your Server URL\r\n    Parse.initialize(\r\n      'CFvZax1DamQQzQcoRRXaE1kHA8MKqMjaoWz2GU4G', // This is your Application ID\r\n      'ChVviJsDLFs5NaiS3iC2AnnXB03mFBl9Ms0bFUIV'\r\n    );\r\n    \r\n    const user = Parse.User.become(localStorage.getItem(\"TOKEN\"))\r\n    .then((user)=>{\r\n        console.log(\"logado\")\r\n        callback(true)\r\n    },(error)=>{\r\n        console.log(\"não logado\")\r\n        callback(false)\r\n    }\r\n    )\r\n}\r\n\r\nexport async function logOut(callback){\r\n    const Parse = require('parse/node');\r\n\r\n    Parse.serverURL = 'https://parseapi.back4app.com'; // This is your Server URL\r\n    Parse.initialize(\r\n      'CFvZax1DamQQzQcoRRXaE1kHA8MKqMjaoWz2GU4G', // This is your Application ID\r\n      'ChVviJsDLFs5NaiS3iC2AnnXB03mFBl9Ms0bFUIV' // This is your Javascript key\r\n    );\r\n    const user = Parse.User.become(localStorage.getItem(\"TOKEN\"))\r\n    if(user){\r\n        Parse.User.logOut()\r\n        localStorage.setItem(\"TOKEN\",\"\")\r\n        console.log(\"Desconectado\")\r\n        callback(false)\r\n    }else{\r\n        console.log(\"Já está desconectado\")\r\n    }\r\n}\r\n\r\nexport async function logIn(username, senha, callback){\r\n    const Parse = require('parse/node');\r\n\r\n    Parse.serverURL = 'https://parseapi.back4app.com'; // This is your Server URL\r\n    Parse.initialize(\r\n      'CFvZax1DamQQzQcoRRXaE1kHA8MKqMjaoWz2GU4G', // This is your Application ID\r\n      'ChVviJsDLFs5NaiS3iC2AnnXB03mFBl9Ms0bFUIV' // This is your Javascript key\r\n    );\r\n    // Pass the username and password to logIn function\r\n    Parse.User.logIn(username,senha).then((user) => {\r\n        console.log('Logged in user', user);\r\n        localStorage.setItem(\"TOKEN\",user.get(\"sessionToken\"));\r\n        localStorage.setItem(\"USER\",JSON.stringify(user));\r\n        callback(true)\r\n    }).catch(error => {\r\n        console.error('Error while logging in user', error);\r\n        callback(false)\r\n    })\r\n}","import React, {useEffect, useState} from 'react'\r\nimport './App.css';\r\nimport Button from \"@material-ui/core/Button\"\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport MenuIcon from \"@material-ui/icons/Menu\"\r\nimport InputAdornment from '@material-ui/core/InputAdornment'\r\nimport SearchIcon from \"@material-ui/icons/Search\"\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\"\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Link from '@material-ui/core/Link'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport ToolBar from '@material-ui/core/Toolbar'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport {verifyLogin} from './auth'\r\nimport {logOut} from './auth'\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nconst useStyles = makeStyles({\r\n    loginbutton: {\r\n        backgroundColor: 'green'\r\n    }\r\n})\r\n\r\nconst useStyleSearchBar=makeStyles({\r\n    root: {\r\n        \"& .MuiOutlinedInput-root\": {\r\n            color: 'white',\r\n          \"& fieldset\": {\r\n            borderColor: \"white\" // default\r\n          },\r\n          \"&.Mui-focused fieldset\": {\r\n            border: \"2px solid white\" // customized\r\n          }\r\n        },\r\n        \"& .MuiFormLabel-root\": {\r\n            color: 'white'\r\n        }\r\n      }\r\n})\r\n\r\n\r\nexport default function Header() {\r\n    const classes=useStyles();\r\n    const searchbar=useStyleSearchBar();\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    const handleClick = (event) => {\r\n      setAnchorEl(event.currentTarget);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setAnchorEl(null);\r\n    };\r\n\r\n    const handleLogout=()=>{\r\n        console.log(\"logtout?\")\r\n        logOut(setLogado)\r\n        setAnchorEl(null);\r\n    }\r\n\r\n    const [logado,setLogado]=useState(false)\r\n\r\n    useEffect(() => {\r\n        verifyLogin(setLogado)\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <AppBar position=\"static\">\r\n                <ToolBar>\r\n                    <Grid\r\n                    container\r\n                    direction=\"row\"\r\n                    justify=\"space-between\"\r\n                    alignItems=\"center\"\r\n                    >\r\n                        <Grid item xs={8}>\r\n                            <Grid\r\n                                container\r\n                                direction=\"row\"\r\n                                justify=\"space-between\"\r\n                                alignItems=\"flex-start\"\r\n                            >\r\n                                <Grid item xs={4}>\r\n                                    <IconButton  edge=\"start\" color=\"inherit\" aria-label=\"menu\">\r\n                                        <MenuIcon />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                    <Link href=\"/\" variant=\"h6\" color='inherit'>AprendeAe</Link>\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                    <TextField id=\"outlined-basic\" label=\"Busca\" variant=\"outlined\" className={searchbar.root} InputProps={{\r\n                                    startAdornment: (\r\n                                        <InputAdornment position=\"start\">\r\n                                            <SearchIcon />\r\n                                        </InputAdornment>\r\n                                        ),\r\n                                    }}/>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {logado?\r\n                                <div>\r\n                                    <Avatar  aria-controls=\"avatar-menu\" aria-haspopup=\"true\" onClick={handleClick}>L</Avatar>\r\n                                    <Menu\r\n                                        id=\"avatar-menu\"\r\n                                        anchorEl={anchorEl}\r\n                                        keepMounted\r\n                                        open={Boolean(anchorEl)}\r\n                                        onClose={handleClose}\r\n                                    >\r\n                                        <MenuItem onClick={handleClose}>Perfil</MenuItem>\r\n                                        <MenuItem onClick={handleClose}>Minha Conta</MenuItem>\r\n                                        <MenuItem onClick={handleLogout}>Logout</MenuItem>\r\n                                    </Menu>\r\n                                </div>\r\n                            :\r\n                                <ButtonGroup>\r\n                                    <Button href='/login' variant=\"contained\" color=\"primary\" className={classes.loginbutton}>Login</Button>\r\n                                </ButtonGroup>\r\n                            }\r\n                            \r\n                        </Grid>\r\n                    </Grid>                    \r\n                </ToolBar>\r\n            </AppBar>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Paper from '@material-ui/core/Paper'\r\n\r\nexport default function Banner() {\r\n    return (\r\n        <div>\r\n            <Paper variant=\"outlined\">\r\n                <Typography variant='h4'>Venha aprender mais conosco!</Typography>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n  },\r\n\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nexport default function DisciplinaCard(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.root} variant=\"outlined\">\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n            {props.disciplina||\"Carregando\"}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Button href={\"perguntasde\"+props.coddisciplina||\"calculo\"} size=\"small\">{props.disciplina||\"Carregando\"}</Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n\r\nDisciplinaCard.propTypes={\r\n  coddisciplina: PropTypes.string\r\n}","import React, {useEffect, useState} from 'react'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Card from '@material-ui/core/Card'\r\nimport DisciplinaCard from '../DisciplinaCard/DisciplinaCard'\r\n\r\nexport default function DisciplinasList() {\r\n\r\n    const [disciplinas,setDisciplinas]=useState({})\r\n\r\n    const Parse = require('parse/node');\r\n\r\n    Parse.serverURL = 'https://parseapi.back4app.com'; // This is your Server URL\r\n    Parse.initialize(\r\n      'CFvZax1DamQQzQcoRRXaE1kHA8MKqMjaoWz2GU4G', // This is your Application ID\r\n      'ChVviJsDLFs5NaiS3iC2AnnXB03mFBl9Ms0bFUIV', // This is your Javascript key\r\n    );\r\n\r\n\r\n    async function fetchData(){\r\n        const Disciplinas = Parse.Object.extend('Disciplinas');\r\n        const query = new Parse.Query(Disciplinas);\r\n        \r\n        query.limit(10);\r\n\r\n        await query.find().then((results) => {\r\n            // You can use the \"get\" method to get the value of an attribute\r\n            // Ex: response.get(\"<ATTRIBUTE_NAME>\")\r\n              setDisciplinas(results);\r\n          }, (error) => {\r\n            console.error('Error while fetching Disciplinas', error);\r\n          })\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchData()\r\n    },[]);\r\n\r\n    const disciplinasDisplay= disciplinas.length >0 ? disciplinas.map (disciplina=>(\r\n        <Grid item sm={12} md={3} key={disciplina.id}>\r\n            <DisciplinaCard disciplina={disciplina.attributes.Nome} coddisciplina={disciplina.attributes.URLid}/>\r\n        </Grid>\r\n    )):\r\n    <div></div>\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"space-evenly\"\r\n              alignItems=\"flex-start\"\r\n            >\r\n                {disciplinasDisplay}\r\n             </Grid>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport './App.css';\r\nimport Banner from './Banner/Banner';\r\nimport DisciplinasList from './DisciplinasList/DisciplinasList'\r\n\r\nexport default function Main() {\r\n    return (\r\n        <div>\r\n            <Banner/>\r\n            <DisciplinasList/>\r\n        </div>\r\n        \r\n    )\r\n}","import React, {useRef} from 'react'\r\nimport {logIn} from './auth'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\nimport Link from '@material-ui/core/Link'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    loginbutton: {\r\n        backgroundColor: 'green'\r\n    },\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n          margin: theme.spacing(3),\r\n          width: '50ch',\r\n        },\r\n    }\r\n}))\r\n\r\nexport default function Login() {\r\n    const classes=useStyles();\r\n    const history=useHistory();\r\n\r\n    const userTextField=useRef();\r\n    const senhaTextField=useRef();\r\n\r\n   const afterLogin=(success)=>{\r\n       console.log(\"Login successeful\")\r\n       history.replace('/')\r\n   }\r\n\r\n   const attemptLogin=()=>{\r\n       logIn(userTextField.current.value,senhaTextField.current.value,afterLogin)\r\n   }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <form className={classes.root} onSubmit={(e)=>{e.preventDefault();attemptLogin()}}>\r\n                <div>\r\n                    <TextField inputRef={userTextField} required id='username' label='Username' type='username' autoComplete=\"username\"></TextField>\r\n                </div>\r\n                <div>\r\n                    <TextField inputRef={senhaTextField} required id='standard-required' label='Senha' type='password' autoComplete='current-password'></TextField>\r\n                </div>\r\n                <div>\r\n                    <Button variant=\"contained\" color=\"primary\" className={classes.loginbutton} type='submit'>Login</Button>\r\n                </div>\r\n                <Link href='/signup'>Não possui conta. Crie a sua aqui.</Link>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Link from '@material-ui/core/Link'\r\nimport ThumbDownIcon from '@material-ui/icons/ThumbDown'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 800,\r\n    textAlign:'left',\r\n    marginTop: '8px',\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto'\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n}));\r\n\r\nexport default function PerguntaCard(props) {\r\n    const classes = useStyles();\r\n    const [expanded, setExpanded] = React.useState(false);\r\n  \r\n    const handleExpandClick = () => {\r\n      setExpanded(!expanded);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Card className={classes.root}>\r\n            <CardHeader\r\n                avatar={\r\n                <Avatar aria-label=\"user\" className={classes.avatar}>\r\n                    R\r\n                </Avatar>\r\n                }\r\n                title={props.cabecalho}\r\n                subheader={\"Postado a \"+props.createdAt+\" horas\"}\r\n            />\r\n            <CardContent>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                {props.descricao.substring(0,100)}\r\n                </Typography>\r\n            </CardContent>\r\n            <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n                <CardContent>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                    {props.descricao.substring(101)}\r\n                </Typography>\r\n                </CardContent>\r\n            </Collapse>\r\n            <CardActions disableSpacing>\r\n                <IconButton aria-label=\"add to favorites\">\r\n                <FavoriteIcon />\r\n                </IconButton>\r\n                <IconButton aria-label=\"dislike\">\r\n                <ThumbDownIcon />\r\n                </IconButton>\r\n                <IconButton aria-label=\"share\">\r\n                <ShareIcon />\r\n                </IconButton>\r\n                <Link href={'perguntaid'+props.id}>Ver Respostas</Link>\r\n                <IconButton\r\n                className={clsx(classes.expand, {\r\n                    [classes.expandOpen]: expanded,\r\n                })}\r\n                onClick={handleExpandClick}\r\n                aria-expanded={expanded}\r\n                aria-label=\"mostrar mais\"\r\n                >\r\n                <ExpandMoreIcon />\r\n                </IconButton>\r\n            </CardActions>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nPerguntaCard.propTypes = {\r\n    cabecalho: PropTypes.string,\r\n    descricao: PropTypes.string\r\n}\r\n\r\nPerguntaCard.defaultProps={\r\n    cabecalho: 'Carregando',\r\n    descricao: 'carregando'\r\n}\r\n\r\n","import React, {useRef} from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nfunction getModalStyle() {\r\n  const top = 50;\r\n  const left = 50;\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: 'absolute',\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n  fab: {\r\n    position: 'fixed',\r\n    bottom: '5%',//theme.spacing(5),\r\n    right: '5%'//theme.spacing(5),\r\n  },\r\n  loginbutton: {\r\n    backgroundColor: 'green'\r\n    },\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n        margin: theme.spacing(3),\r\n        width: '80%',\r\n        },\r\n    }\r\n}));\r\n\r\nexport default function PerguntaForm(props) {\r\n\r\n    const headerTextField=useRef();\r\n    const descricaoTextField=useRef();\r\n\r\n    const Parse = require('parse/node');\r\n\r\n    Parse.serverURL = 'https://parseapi.back4app.com'; // This is your Server URL\r\n    Parse.initialize(\r\n      'CFvZax1DamQQzQcoRRXaE1kHA8MKqMjaoWz2GU4G', // This is your Application ID\r\n      'ChVviJsDLFs5NaiS3iC2AnnXB03mFBl9Ms0bFUIV', // This is your Javascript key\r\n      localStorage.getItem(\"TOKEN\")\r\n    );\r\n\r\n    async function sendPergunta(){\r\n        const Perguntas = Parse.Object.extend('Perguntas');\r\n        const perguntas = new Perguntas();\r\n        \r\n        perguntas.set('HeaderText', headerTextField.current.value);\r\n        perguntas.set('Description', descricaoTextField.current.value);\r\n\r\n\r\n        \r\n        Parse.User.become(localStorage.getItem(\"TOKEN\"))\r\n        .then( (usuario)=>{\r\n            perguntas.set('usuarioId', usuario);\r\n          \r\n            const Disciplinas = Parse.Object.extend('Disciplinas');\r\n            const disciplinasquery = new Parse.Query(Disciplinas);\r\n          \r\n            disciplinasquery.equalTo('URLid',props.disciplina);\r\n\r\n            disciplinasquery.first().then((disciplina)=>{\r\n          \r\n                perguntas.set('disciplinaId', disciplina);\r\n                perguntas.save().then(\r\n                (result) => {\r\n                    alert('Pergunta criada', result);\r\n                    handleClose()\r\n                    props.refresh()\r\n                },\r\n                (error) => {\r\n                    console.error('Erro enquanto criava pergunta: ', error);\r\n            }\r\n          );\r\n          }\r\n          )\r\n        }\r\n        )\r\n    }\r\n\r\n    const classes = useStyles();\r\n    // getModalStyle is not a pure function, we roll the style only on the first render\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleOpen = () => {\r\n    setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n    setOpen(false);\r\n    };\r\n\r\n    const body = (\r\n    <div style={modalStyle} className={classes.paper}>\r\n        <h2 id=\"simple-modal-title\">Faça sua pergunta</h2>\r\n        <form className={classes.root} onSubmit={(e)=>{e.preventDefault();sendPergunta()}}>\r\n            <div>\r\n                <TextField value=\"Cálculo I\" label=\"Disciplina\" disabled={true} variant=\"outlined\" color='secondary'></TextField>\r\n            </div>\r\n            <div>\r\n                <TextField inputRef={headerTextField} label=\"Tópico da Pergunta\" autoFocus={true} variant=\"outlined\" multiline={true}></TextField>\r\n            </div>\r\n            <div>\r\n                <TextField inputRef={descricaoTextField} label=\"Descrição\"  variant=\"outlined\" multiline={true}></TextField>\r\n            </div>\r\n            <Button className={classes.loginbutton} variant=\"contained\" color=\"primary\" type=\"submit\">Perguntar</Button>\r\n        </form>\r\n    </div>\r\n    );\r\n\r\n  return (\r\n    <div>\r\n      <Fab className={classes.fab} color=\"primary\" aria-label=\"add\" type=\"button\" onClick={handleOpen}>\r\n        <AddIcon />\r\n      </Fab>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n      >\r\n        {body}\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nPerguntaForm.propTypes = {\r\n    disciplina: PropTypes.string\r\n}","import React, {useEffect, useState} from 'react'\r\nimport PerguntaCard from './PerguntaCard/PerguntaCard'\r\nimport PerguntaForm from './PerguntaForm/PerguntaForm'\r\nimport {useParams} from 'react-router-dom'\r\n\r\nexport default function Perguntas() {\r\n    let {disciplina} = useParams();\r\n\r\n    const [perguntas,setPerguntas]=useState({});\r\n\r\n    const Parse = require('parse/node');\r\n\r\n    Parse.serverURL = 'https://parseapi.back4app.com'; // This is your Server URL\r\n    Parse.initialize(\r\n      'CFvZax1DamQQzQcoRRXaE1kHA8MKqMjaoWz2GU4G', // This is your Application ID\r\n      'ChVviJsDLFs5NaiS3iC2AnnXB03mFBl9Ms0bFUIV', // This is your Javascript key\r\n    );\r\n\r\n\r\n    async function fetchData(){\r\n        const Disciplinas = Parse.Object.extend(\"Disciplinas\");\r\n        const innerquery = new Parse.Query(Disciplinas);\r\n        innerquery.equalTo('URLid', disciplina)\r\n        const Perguntas = Parse.Object.extend('Perguntas');\r\n        const query = new Parse.Query(Perguntas);\r\n        query.limit(10);\r\n        query.matchesQuery(\"disciplinaId\",innerquery)\r\n        query.find().then((results) => {\r\n              setPerguntas(results);\r\n          }, (error) => {\r\n            console.error('Error while fetching Perguntas', error);\r\n          })\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchData()\r\n    },[]);\r\n\r\n    const listaPerguntas= perguntas.length >0 ? perguntas.map(pergunta=>(\r\n        <div key={pergunta.id}>\r\n            <PerguntaCard id={pergunta.id} cabecalho={pergunta.attributes.HeaderText} descricao={pergunta.attributes.Description} createdAt={Math.floor((Date.now()-pergunta.createdAt.getTime())/(1000*60*60))}/>\r\n        </div>)):\r\n        <div></div>\r\n\r\n    return (\r\n        <div>\r\n            {listaPerguntas}\r\n            <PerguntaForm disciplina={disciplina} refresh={()=>fetchData()}/>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ThumbDownIcon from '@material-ui/icons/ThumbDown'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 800,\r\n    textAlign:'left',\r\n    marginTop: '8px',\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n    backgroundColor: 'floralwhite'\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n}));\r\n\r\nexport default function RespostaCard(props) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <Card className={classes.root}>\r\n            <CardHeader\r\n                avatar={\r\n                <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                    {props.email.charAt(0)}\r\n                </Avatar>\r\n                }\r\n                subheader={\"Postado a \"+props.createdAt+\" horas\"}\r\n            />\r\n            <CardContent>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                    {props.comentario}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions disableSpacing>\r\n                <IconButton aria-label=\"add to favorites\">\r\n                <FavoriteIcon />\r\n                </IconButton>\r\n                <IconButton aria-label=\"dislike\">\r\n                <ThumbDownIcon />\r\n                </IconButton>\r\n                <IconButton aria-label=\"share\">\r\n                <ShareIcon />\r\n                </IconButton>\r\n            </CardActions>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nRespostaCard.propTypes = {\r\n    cabecalho: PropTypes.string,\r\n    descricao: PropTypes.string,\r\n    email: PropTypes.string,\r\n    comentario: PropTypes.string\r\n}\r\n\r\nRespostaCard.defaultProps={\r\n    cabecalho: 'Carregando',\r\n    descricao: '',\r\n    email: 'R@email.com',\r\n    comentario: 'carregando'\r\n}","import React, {useRef} from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nfunction getModalStyle() {\r\n  const top = 50;\r\n  const left = 50;\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: 'absolute',\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n  fab: {\r\n    position: 'fixed',\r\n    bottom: '5%',//theme.spacing(5),\r\n    right: '5%'//theme.spacing(5),\r\n  },\r\n  loginbutton: {\r\n    backgroundColor: 'green'\r\n    },\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n        margin: theme.spacing(3),\r\n        width: '80%',\r\n        },\r\n    }\r\n}));\r\n\r\nexport default function RespostaForm(props) {\r\n\r\n    const respostaTextField=useRef();\r\n\r\n    const Parse = require('parse/node');\r\n\r\n    Parse.serverURL = 'https://parseapi.back4app.com'; // This is your Server URL\r\n    Parse.initialize(\r\n      'CFvZax1DamQQzQcoRRXaE1kHA8MKqMjaoWz2GU4G', // This is your Application ID\r\n      'ChVviJsDLFs5NaiS3iC2AnnXB03mFBl9Ms0bFUIV', // This is your Javascript key\r\n      localStorage.getItem(\"TOKEN\")\r\n    );\r\n\r\n    async function sendResposta(){\r\n        const Respostas = Parse.Object.extend('Respostas');\r\n        const respostas = new Respostas();\r\n        \r\n        respostas.set('resposta', respostaTextField.current.value);\r\n\r\n        Parse.User.become(localStorage.getItem(\"TOKEN\"))\r\n        .then( (usuario)=>{\r\n            respostas.set('usuarioId', usuario);\r\n          \r\n            const Perguntas = Parse.Object.extend('Perguntas');\r\n            const perguntasquery = new Parse.Query(Perguntas);\r\n          \r\n            perguntasquery.equalTo('objectId',props.pergunta);\r\n\r\n            perguntasquery.first().then((pergunta)=>{\r\n          \r\n                respostas.set('perguntaId', pergunta);\r\n                respostas.save().then(\r\n                (result) => {\r\n                    alert('Resposta criada', result);\r\n                    handleClose()\r\n                    props.refresh()\r\n                },\r\n                (error) => {\r\n                    console.error('Erro enquanto respondia: ', error);\r\n            }\r\n          );\r\n          }\r\n          )\r\n        }\r\n        )\r\n    }\r\n\r\n    const classes = useStyles();\r\n    // getModalStyle is not a pure function, we roll the style only on the first render\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleOpen = () => {\r\n    setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n    setOpen(false);\r\n    };\r\n\r\n    const body = (\r\n    <div style={modalStyle} className={classes.paper}>\r\n        <h2 id=\"simple-modal-title\">Ajude outros com a sua resposta:</h2>\r\n        <form className={classes.root} onSubmit={(e)=>{e.preventDefault();sendResposta()}}>\r\n            <div>\r\n                <TextField inputRef={respostaTextField} label=\"Resposta\"  variant=\"outlined\" multiline={true}></TextField>\r\n            </div>\r\n            <Button className={classes.loginbutton} variant=\"contained\" color=\"primary\" type=\"submit\">Responder</Button>\r\n        </form>\r\n    </div>\r\n    );\r\n\r\n  return (\r\n    <div>\r\n      <Fab className={classes.fab} color=\"primary\" aria-label=\"add\" type=\"button\" onClick={handleOpen}>\r\n        <AddIcon />\r\n      </Fab>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n      >\r\n        {body}\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nRespostaForm.propTypes = {\r\n    resposta: PropTypes.string\r\n}","import React, {useEffect, useState} from 'react'\r\nimport PerguntaCard from './PerguntaCard/PerguntaCard'\r\nimport RespostaCard from './RespostaCard/RespostaCard'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport {useParams} from 'react-router-dom'\r\nimport RespostaForm from './RespostaForm/RespostaForm'\r\n\r\nexport default function PerguntaPage() {\r\n\r\n    let {id} = useParams();\r\n\r\n    const [pergunta,setPergunta]=useState({});\r\n    const [respostas,setRespostas]=useState({});\r\n\r\n    const Parse = require('parse/node');\r\n\r\n    Parse.serverURL = 'https://parseapi.back4app.com'; // This is your Server URL\r\n    Parse.initialize(\r\n      'CFvZax1DamQQzQcoRRXaE1kHA8MKqMjaoWz2GU4G', // This is your Application ID\r\n      'ChVviJsDLFs5NaiS3iC2AnnXB03mFBl9Ms0bFUIV', // This is your Javascript key\r\n    );\r\n\r\n\r\n    async function fetchData(){\r\n        const Perguntas = Parse.Object.extend('Perguntas');\r\n        const query = new Parse.Query(Perguntas);\r\n        \r\n        query.get(id)\r\n        query.find().then((result) => {\r\n              setPergunta(result);\r\n          }, (error) => {\r\n            console.error('Error while fetching Perguntas', error);\r\n          })\r\n    }\r\n\r\n    async function fetchRespostas(){\r\n        const Respostas = Parse.Object.extend('Respostas');\r\n        const query = new Parse.Query(Respostas);\r\n        query.limit(10)\r\n        query.matches(\"perguntaId\",id)\r\n        query.find().then((results) => {\r\n              setRespostas(results);\r\n          }, (error) => {\r\n            console.error('Error while fetching Respostas', error);\r\n          })\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchData()\r\n        fetchRespostas()\r\n    },[]);\r\n\r\n    const listaRespostas = respostas.length>0? respostas.map(resposta=>\r\n        <div key={resposta.id}>\r\n            <RespostaCard email=\"resposta.attributes.HeaderText\" comentario={resposta.attributes.resposta} createdAt={Math.floor((Date.now()-resposta.createdAt.getTime())/(1000*60*60))}/>\r\n        </div>\r\n        )\r\n        :\r\n        <div>\r\n            <Typography variant=\"h6\" align='left'>Ainda não foram encontradas respostas, que tal ser primeiro a responder?</Typography>\r\n        </div>\r\n        ;\r\n\r\n    const cardpergunta = pergunta.length > 0 ?\r\n        <div>\r\n            <PerguntaCard id={id} cabecalho={pergunta[0].attributes.HeaderText} descricao={pergunta[0].attributes.Description} createdAt={Math.floor((Date.now()-pergunta[0].createdAt.getTime())/(1000*60*60))}/>\r\n            <Typography variant=\"h5\" align='center' >Respostas </Typography>\r\n            {listaRespostas}\r\n            <RespostaForm pergunta={id} refresh={()=>fetchRespostas()}/>\r\n        </div>\r\n        :\r\n        <div>\r\n            <Typography> Pergunta não encontrada. </Typography>\r\n        </div>;\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                cardpergunta\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}","import React, {useRef} from 'react'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    loginbutton: {\r\n        backgroundColor: 'green'\r\n    },\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n          margin: theme.spacing(3),\r\n          width: '50ch',\r\n        },\r\n    }\r\n}))\r\n\r\nexport default function Signup() {\r\n    const classes=useStyles();\r\n\r\n    const emailTextField=useRef();\r\n    const senhaTextField=useRef();\r\n    const confirmasenhaTextField=useRef();\r\n    const usernameTextField=useRef();\r\n\r\n    const Parse = require('parse/node');\r\n\r\n    Parse.serverURL = 'https://parseapi.back4app.com'; // This is your Server URL\r\n    Parse.initialize(\r\n      'CFvZax1DamQQzQcoRRXaE1kHA8MKqMjaoWz2GU4G', // This is your Application ID\r\n      'ChVviJsDLFs5NaiS3iC2AnnXB03mFBl9Ms0bFUIV', // This is your Javascript key\r\n    );\r\n\r\n    async function signUp(){\r\n        if(senhaTextField.current.value!==confirmasenhaTextField.current.value){\r\n            alert(\"Senhas não são iguais!\")\r\n            return\r\n        }\r\n        const user = new Parse.User()\r\n        user.set('username', usernameTextField.current.value);\r\n        user.set('email', emailTextField.current.value);\r\n        user.set('password', senhaTextField.current.value);\r\n\r\n        user.signUp().then((user) => {\r\n            alert('Usuario inscrito com sucesso', user);\r\n        }).catch(error => {\r\n            console.error('Error while signing up user', error);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form className={classes.root} onSubmit={(e)=>{e.preventDefault();signUp()}}>\r\n                <div>\r\n                    <TextField inputRef={usernameTextField} required id='username' label='Usuário' type='username' autoComplete=\"username\"></TextField>\r\n                </div>\r\n                <div>\r\n                    <TextField inputRef={emailTextField} required id='email' label='E-mail' type='email' autoComplete=\"email\"></TextField>\r\n                </div>\r\n                <div>\r\n                    <TextField inputRef={senhaTextField} required id='senha' label='Senha' type='password' autoComplete='new-password'></TextField>\r\n                </div>\r\n                <div>\r\n                    <TextField inputRef={confirmasenhaTextField} required id='confirmasenha' label='Confirmar Senha' type='password' autoComplete='new-password'></TextField>\r\n                </div>\r\n                <div>\r\n                    <Button variant=\"contained\" color=\"primary\" className={classes.loginbutton} type=\"submit\">Criar conta</Button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}","import React, {useEffect, useState} from 'react'\r\n\r\nexport default function Test() {\r\n\r\n    const [perguntas,setPerguntas]=useState({});\r\n\r\n    const Parse = require('parse/node');\r\n\r\n    Parse.serverURL = 'https://parseapi.back4app.com'; // This is your Server URL\r\n    Parse.initialize(\r\n      'CFvZax1DamQQzQcoRRXaE1kHA8MKqMjaoWz2GU4G', // This is your Application ID\r\n      'ChVviJsDLFs5NaiS3iC2AnnXB03mFBl9Ms0bFUIV', // This is your Javascript key\r\n    );\r\n\r\n\r\n    async function fetchData(){\r\n        const Perguntas = Parse.Object.extend('Perguntas');\r\n        const query = new Parse.Query(Perguntas);\r\n        query.find().then((results) => {\r\n            // You can use the \"get\" method to get the value of an attribute\r\n            // Ex: response.get(\"<ATTRIBUTE_NAME>\")\r\n              setPerguntas(results)\r\n          }, (error) => {\r\n            console.error('Error while fetching Perguntas', error);\r\n          })\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchData()\r\n    },[]);\r\n\r\n\r\n    /*useEffect(()=>{\r\n        const Perguntas = Parse.Object.extend('Perguntas');\r\n        const query = new Parse.Query(Perguntas);\r\n        query.find().then((results) => {\r\n            // You can use the \"get\" method to get the value of an attribute\r\n            // Ex: response.get(\"<ATTRIBUTE_NAME>\")\r\n              setPerguntas(results)\r\n          }, (error) => {\r\n            console.error('Error while fetching Perguntas', error);\r\n          })\r\n        },[]\r\n    )*/\r\n\r\n    const displayperguntas = perguntas.length>0 ? perguntas.map(pergunta=>(\r\n        <div key={pergunta.id}>\r\n            Teste id= {pergunta.id}\r\n        </div>\r\n        )):\r\n        <div>Pergunta não encontrada</div>\r\n\r\n    return (\r\n        <div>\r\n            {displayperguntas}\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport './Header'\nimport Header from './Header';\nimport Main from './Main';\nimport {\n  BrowserRouter as Router,\n  HashRouter,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport Login from './Login';\nimport Perguntas from './Perguntas';\nimport PerguntaPage from './PerguntaPage';\nimport Signup from './Signup'\nimport Test from './Test'\n\nfunction App() {\n  const Parse = require('parse/node');\n\n  Parse.serverURL = 'https://parseapi.back4app.com'; // This is your Server URL\n  Parse.initialize(\n    'CFvZax1DamQQzQcoRRXaE1kHA8MKqMjaoWz2GU4G', // This is your Application ID\n    'ChVviJsDLFs5NaiS3iC2AnnXB03mFBl9Ms0bFUIV', // This is your Javascript key\n    '9k1iodclsR5coYpKfKOhusJEKCaf3qZTqpEnri4h' // This is your Master key (never use it in the frontend)\n  );\n\n  return (\n    <div className=\"App\">\n      <HashRouter basename='/'>\n        <Header/>\n        <Switch>\n          <Route exact path=\"/\">\n            <Main/>\n          </Route>\n          <Route path=\"/login\">\n            <Login/>\n          </Route>\n          <Route path=\"/perguntasde:disciplina\">\n            <Perguntas/>\n          </Route>\n          <Route path=\"/perguntaid:id\">\n            <PerguntaPage/>\n          </Route>\n          <Route path=\"/signup\">\n            <Signup/>\n          </Route>\n          <Route path=\"/test\">\n            <Test/>\n          </Route>\n        </Switch>\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}